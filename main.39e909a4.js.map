{"version":3,"sources":["scripts/main.js"],"names":["messageElements","document","createElement","waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","className","body","append","printMessage","message","messageElement","textContent","module","exports"],"mappings":";AAAA,aAEA,IAAMA,EAAkBC,SAASC,cAAc,OAK/C,SAASC,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EACWF,oBAAAA,OAAAA,EACPD,8BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GAFrC,kBANNV,EAAgBW,UAAY,WAC5BV,SAASW,KAAKC,OAAOb,GAarB,IAAMc,EAAe,SAACC,GACdC,IAAAA,EAAiBf,SAASC,cAAc,OAE9Cc,EAAeC,YAAcF,EAC7BC,EAAeL,UAAY,UAE3BX,EAAgBa,OAAOG,IAGzBE,OAAOC,QAAU,CACfhB,QAAAA,EACAW,aAAAA","file":"main.39e909a4.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst messageElements = document.createElement('div');\n\nmessageElements.className = 'messages';\ndocument.body.append(messageElements);\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`\n        It was ${eventName} on the element:\n        ${element.nodeName}, id: ${element.id}.\n      `);\n    });\n  });\n};\n\nconst printMessage = (message) => {\n  const messageElement = document.createElement('div');\n\n  messageElement.textContent = message;\n  messageElement.className = 'message';\n\n  messageElements.append(messageElement);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}